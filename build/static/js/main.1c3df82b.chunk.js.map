{"version":3,"sources":["utils/sh.js","pages/cockpit.js","pages/register.js","pages/settings.js","pages/registerUser.js","pages/controls.js","layout/nav.js","layout/footer.js","App.js","reportWebVitals.js","index.js"],"names":["btnStyle","arc_c_usrs__GET","api_http","arc_cmd_table__POST","arc_ctrl_table__GET","arc_ctrl_table__PATCH","arc_ctrl_table__POST","arc_r_usrs__GET","arc_c_usrs__AN_GET","arc_r_usrs__AN_GET","arc_ctrl_table__AN_GET_By_C_User","arc_cmd_list_table__AN_GET","postArcData","apiLink","data","a","headers","axios","post","then","response","console","log","catch","error","e","patchArcData","id","patch","getArcData","get","anID_R_Gen","genID","createANID","status","anID_C_Gen","anID_Cmd_Lst_Gen","getCurrDateTime","date","Date","getUTCFullYear","getUTCMonth","slice","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","len","Math","random","toString","substr","Cockpit","consoleOutput","useRef","useState","c_usr_data","setC_Usr_Data","r_usr_data","setR_Usr_Data","setOrNotSet1","setOrNotSet2","red_or_Green_Txt1","red_or_Green_Txt2","isConnected","botConnectedID","botConnectedName","selectedCtrlID","selectedCtrlName","default_option","value","appVars","setAppVars","ctrl_index_left","ctrl_index_right","ctrl_arrow_up","ctrl_arrow_down","ctrl_arrow_left","ctrl_arrow_right","ctrl_btn_x","ctrl_btn_y","ctrl_btn_a","ctrl_btn_b","ctrl_btn_start","ctrl_btn_select","controllerMap","setControllerMap","cmd_an_id","r_usr_an_id","c_usr_an_id","r_usr_code_name","cmd_exec_name","cmd_exec_params","cmd_exec_data","cmd_status","cmd_op1","cmd_op2","cmd_op3","cmd_date_created","cmd_date_executed","sendCommandData","setSendCommandData","ctrl_id","ctrl_an_id","idContainer","setIDContainer","currentConsoleOutput","setCurrentConsoleOutput","consoleTextAreaValue","setConsoleTextAreaValue","event","updateConsoles","msg","prevState","textarea","document","getElementById","scrollTop","scrollHeight","execCtrlOperation","key","mappedCtrl","params","datas","op1","op2","op3","keyInput","ctrlAndRobotNotSetError","alert","handleControllerClick","controllerID","target","attributes","mappedKey","ctrl_btn_star","robotSelectMessage","options","selectedIndex","text","controlSelectMessage","fetch","resp_selected_controller","json","selected_data_controller","useEffect","response_arc_c_users","response_arc_r_users","response_arc_ctrl_table","data_arc_c_users","data_arc_r_users","optionList_C_Usr","Object","entries","map","c_usr_name","optionList_R_Usr","className","data1","onClick","style","whiteSpace","ref","abindex","readOnly","htmlFor","name","onChange","Register","props","componentDidMount","getR_USR_AN_ID","setState","handleSubmit","preventDefault","state","window","location","reload","handleInputChange","r_usr_ip","this","onSubmit","type","Component","Settings","getCmd_Lst_USR_AN_ID","componentWillUnmount","localStorage","setItem","RegisterUser","getC_USR_AN_ID","getR_Name_And_ID","JSON","stringify","r_data","parse","getItem","optionList","ControlsComponent","createdOrUpdate","c_cmd_lst_data","setC_Cmd_List","setOrNotSet","red_or_Green_Txt","ctrl_combo_1","ctrl_combo_2","ctrl_combo_3","ctrl_combo_4","ctrl_combo_5","ctrl_combo_6","ctrl_fields","setHandleFieldChange","cus","handleFieldChange","getCtrl_AN_ID","resetSelectToDefault","resetSelectToDefaultObject","check_c_usr_ANID","check_ctrl_ANID_raw","check_ctrl_ANID_json","$","val","response_arc_cmd_list_table","data_arc_cmd_lst","optionList_C_Cmd_List","cmd_lst_an_id","navs","path","Nav","navItem","exact","to","activeClassName","Footer","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.1c3df82b.chunk.js","sourcesContent":["import axios from 'axios'\n\n//------------------GLOBAL VALS-----------------------------\nexport const btnStyle = 'bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded'\n\n//------------------APP SETTINGS -----------------------------\nexport const api_domain = 'arc.lonaris.ca',\n api_port = '81',\n api_http = 'http://',\n api_mid_prefix1 = '/api/arc_db/'\n\n\n//------------------API LINKS -----------------------------\nexport const arc_c_usrs__GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_c_users',\n arc_c_usrs__PATCH = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_c_users/c_usr_id/',\n arc_c_usrs__POST = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_c_users/c_usrs',\n arc_c_usrs__DEL = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_c_users/c_usr_id/',\n arc_cmd_list_table__GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_cmd_list_table/',\n arc_cmd_list_table__PATCH = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_cmd_list_table/cmd_lst_id/',\n arc_cmd_list_table__POST = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_cmd_list_table/cmd_list_item',\n arc_cmd_list_table__DEL = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_cmd_list_table/cmd_list_item_id/',\n arc_cmd_table__GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_cmd_table/',\n arc_cmd_table__PATCH = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_cmd_table/cmd_id/',\n arc_cmd_table__POST = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_cmd_table/mkcmd',\n arc_cmd_table__DEL = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_cmd_table/r_usr_id/',\n arc_ctrl_table__GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_ctrl_table/',\n arc_ctrl_table__PATCH = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_ctrl_table/ctrl_id/',\n arc_ctrl_table__POST = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_ctrl_table/mk_ctrl',\n arc_ctrl_table__DEL = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_ctrl_table/ctrl_id/',\n arc_r_usrs__GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_r_users/',\n arc_r_usrs__PATCH = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_r_users/r_usr_id/',\n arc_r_usrs__POST = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_r_users/r_usrs',\n arc_r_usrs__DEL = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_r_users/r_usr_id/',\n arc_sys_settings__GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_sys_settings',\n arc_sys_settings__PATCH = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_sys_settings/set_id/',\n arc_sys_settings__POST = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_sys_settings/mk_settings',\n arc_sys_settings__DEL = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_sys_settings/set_id/',\n\n //-----------------------------Search by API Alpha Numeric ID's----------------------------------------------\n arc_c_usrs__AN_GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_c_users/c_usr_an_id/',\n arc_r_usrs__AN_GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_r_users/r_usr_an_id/',\n arc_sys_settings__AN_GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_sys_settings/set_an_id/',\n arc_ctrl_table__AN_GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_ctrl_table/ctrl_an_id/',\n arc_ctrl_table__AN_GET_By_C_User = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_ctrl_table/c_usr_an_id/',\n arc_cmd_table__AN_GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_cmd_table/cmd_id/',\n arc_cmd_list_table__AN_GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_cmd_list/cmd_lst_id/',\n\n //-----------------------------Search by API ID's----------------------------------------------\n arc_c_usrs__ID_GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_c_users/c_usr_id/',\n arc_r_usrs__ID_GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_r_users/r_usr_id/',\n arc_sys_settings__ID_GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_sys_settings/set_id/',\n arc_ctrl_table__ID_GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_ctrl_table/ctrl_id/',\n arc_cmd_table__ID_GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_cmd_table/cmd_id/',\n arc_cmd_list_table__ID_GET = api_http+api_domain+':'+api_port+api_mid_prefix1+'arc_cmd_list/cmd_lst_an_id/'\n\n //-----------------------------Search Related Tables by AN ID's----------------------------------------------\n \n\n//------------------ASYNC FUNCTIONS-----------------------------\nexport async function postArcData(apiLink, data){\n    try{\n    const headers = {\n       'Content-Type': 'application/json'\n    }\n        axios\n            .post(apiLink, data, {\n              headers: headers\n            })\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error =>{\n                console.log(error)\n            })\n    }catch(e){\n        console.log(e)\n    }\n\n}\n\nexport async function patchArcData(apiLink, data, id){\n    try{\n        axios\n            .patch(apiLink+id, data)\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error =>{\n                console.log(error)\n            })\n    }catch(e){\n        console.log(e)\n    }\n\n}\n\nexport async function deleteArcData(apiLink, data){\n    try{\n        axios\n            .delete(apiLink, data)\n            .then(response => {\n                console.log(response)\n            })\n            .catch(error =>{\n                console.log(error)\n            })\n    }catch(e){\n        console.log(e)\n    }\n\n}\n\nexport const getArcData = async(apiLink) => {\n    try{\n        let response= ''\n        response = axios.get(apiLink)\n        return response\n    }catch(e){\n        console.log(e)\n    }\n\n}\n\nexport async function getWhereArcData(apiLink, data){\n    try{\n        var self = this;\n        axios.get(apiLink)\n        .then(function (response) {\n        console.log(response);\n        self.setState({events: response.data})\n        })\n        .catch(function (error) {\n        console.log(error);\n        });\n\n        return self\n    }catch(e){\n        console.log(e)\n    }\n\n}\n\nexport const anID_R_Gen = async(apiLink=arc_r_usrs__AN_GET) => {\n   \n        let genID =  ''\n        let response = ''\n\n        genID = await createANID(10)\n        response = axios.get(apiLink + genID)\n        if(response.status === '200'){\n            genID = createANID(10)\n            return  genID\n        }else if(response.status === '404'){\n            return  genID\n        }\n\n        return  genID\n}\n\nexport const anID_C_Gen = async(apiLink=arc_c_usrs__AN_GET) => {\n   \n    let genID =  ''\n    let response = ''\n\n    genID = createANID(10)\n    response = axios.get(apiLink + genID)\n    if(response.status === '200'){\n        genID = createANID(10)\n        return  genID\n    }else if(response.status === '404'){\n        return  genID\n    }\n\n    return  genID\n}\n\nexport const anID_Cmd_Lst_Gen = async(apiLink=arc_cmd_list_table__AN_GET) => {\n   \n    let genID =  ''\n    let response = ''\n\n    genID = createANID(10)\n    response = axios.get(apiLink + genID)\n    if(response.status === '200'){\n        genID = createANID(10)\n        return  genID\n    }else if(response.status === '404'){\n        return  genID\n    }\n\n    return  genID\n}\n\nexport const anID_Cmd_Gen = async(apiLink=arc_cmd_table__AN_GET) => {\n   \n    let genID =  ''\n    let response = ''\n\n    genID = createANID(10)\n    response = axios.get(apiLink + genID)\n    if(response.status === '200'){\n        genID = createANID(10)\n        return  genID\n    }else if(response.status === '404'){\n        return  genID\n    }\n\n    return  genID\n}\n\n//------------------NON - ASYNC FUNCTIONS-----------------------------\n\nexport function getCurrDateTime(){\n    try{\n        var date;\n        date = new Date();\n        date = date.getUTCFullYear() + '-' +\n            ('00' + (date.getUTCMonth()+1)).slice(-2) + '-' +\n            ('00' + date.getUTCDate()).slice(-2) + ' ' + \n            ('00' + date.getUTCHours()).slice(-2) + ':' + \n            ('00' + date.getUTCMinutes()).slice(-2) + ':' + \n            ('00' + date.getUTCSeconds()).slice(-2);\n        //console.log(date)\n        return date\n\n    }catch(e){\n        console.log(e)\n    }\n\n}\n\nexport function createANID(len){\n        return Math.random().toString(16).substr(2, len);\n}\n\n","import React, {useState, useEffect, useRef} from 'react'\nimport $ from 'jquery';\nimport '../../src/lib/snes-ctrl/styles.css'\nimport {\n        btnStyle, \n        anID_Cmd_Gen,\n        getCurrDateTime,\n        postArcData,\n        createANID,\n        arc_c_usrs__GET,\n        arc_r_usrs__GET,\n        arc_ctrl_table__AN_GET_By_C_User,\n        arc_ctrl_table__GET,\n        arc_cmd_table__POST\n} from '../utils/sh'\n\nfunction Cockpit(){\n    \n    const consoleOutput = useRef(null);\n\n    const [c_usr_data, setC_Usr_Data] = useState(null)\n    const [r_usr_data, setR_Usr_Data] = useState(null)\n    const [c_ctrl_data, setCtrl_Data] = useState(null)\n    \n    const [appVars, setAppVars] = useState({\n        setOrNotSet1 : \"[Not Set]\",\n        setOrNotSet2 : \"[Not Set]\",\n        red_or_Green_Txt1 : \"text-red-700 font-bold text-lg\",\n        red_or_Green_Txt2 : \"text-red-700 font-bold text-lg\",\n        isConnected: \"false\",\n        botConnectedID: \"\",\n        botConnectedName: \"\",\n        selectedCtrlID:\"\",\n        selectedCtrlName:\"\",\n        default_option: <option value=\"0\"  >-- Pick Control --</option>\n    });\n    const [controllerMap, setControllerMap] = useState({\n        ctrl_index_left : \"\",\n        ctrl_index_right : \"\",\n        ctrl_arrow_up : \"\",\n        ctrl_arrow_down : \"\",\n        ctrl_arrow_left: \"\",\n        ctrl_arrow_right: \"\",\n        ctrl_btn_x: \"\",\n        ctrl_btn_y:\"\",\n        ctrl_btn_a:\"\",\n        ctrl_btn_b: \"\",\n        ctrl_btn_start:\"\",\n        ctrl_btn_select:\"\"\n    });\n    const [sendCommandData, setSendCommandData] = useState({\n        cmd_an_id : \"0\",\n        r_usr_an_id : \"0\",\n        c_usr_an_id : \"0\",\n        r_usr_code_name : \"0\",\n        cmd_exec_name : \"0\",\n        cmd_exec_params : \"0\",\n        cmd_exec_data : \"0\",\n        cmd_status : \"0\",\n        cmd_op1 : \"0\",\n        cmd_op2 : \"0\",\n        cmd_op3 : \"0\",\n        cmd_date_created : \"1970-01-01 00:00:00\",\n        cmd_date_executed : \"1970-01-01 00:00:00\"\n    })   \n    const [idContainer, setIDContainer] = useState({\n        ctrl_id : \"0\",\n        ctrl_an_id : \"0\",\n        c_usr_an_id : \"0\",\n        r_usr_an_id : \"0\"\n    });\n    const [currentConsoleOutput, setCurrentConsoleOutput] = useState([\n        \"\"\n    ]);\n    const [consoleTextAreaValue, setConsoleTextAreaValue] = useState([\n        \"Startng Up Console....\"\n    ]);\n\n    useEffect(async() =>{\n        const response_arc_c_users = await fetch(arc_c_usrs__GET)\n        const response_arc_r_users = await fetch(arc_r_usrs__GET)\n        const response_arc_ctrl_table = await fetch(arc_ctrl_table__GET)\n\n        const data_arc_c_users = await response_arc_c_users.json()\n        const data_arc_r_users = await response_arc_r_users.json()\n        const data_arc_ctrl_data = await response_arc_ctrl_table.json()\n\n        const optionList_C_Usr = Object.entries(data_arc_c_users).map(key => {\n            return(\n                <option text={key[1].c_usr_name} value={key[1].c_usr_an_id}  >{key[1].c_usr_name}</option>\n            )\n        })\n\n        const optionList_R_Usr = Object.entries(data_arc_r_users).map(key => {\n            return(\n                <option text={key[1].r_usr_code_name} value={key[1].r_usr_an_id}  >{key[1].r_usr_code_name}</option>\n            )\n        })\n\n\n        setC_Usr_Data(optionList_C_Usr)\n        setR_Usr_Data(optionList_R_Usr)\n\n    }, [])\n\n    async function handleSubmit(event) {\n        // event.preventDefault();\n        \n        // const cus = localStorage.getItem('createOrUpdate_State')\n        \n        // if(cus === 'create'){\n    \n        //     postArcData(arc_ctrl_table__POST, ctrl_fields)\n        //     alert(\"Your controls have been created!\")\n            \n        // }else if(cus === 'update'){\n        //     //since we can only update by id, we need to get the id\n        //     patchArcData(arc_ctrl_table__PATCH, ctrl_fields, ctrl_fields.ctrl_id)\n        //     alert(\"Your controls have been updated!\")\n        // }\n    }\n\n    async function sendTest(event) {\n        \n    }\n\n    async function sendConnectToken(event) {\n        \n    }\n\n    async function getRobotStatus(event) {\n        \n    }\n\n    async function updateConsoles(msg) {\n        // Add commands to console screen\n        setConsoleTextAreaValue(prevState => [\n            ...prevState,\n            '\\n' + msg\n        ])\n\n        //update current console\n        setCurrentConsoleOutput([msg])\n\n        //Scroll down\n        var textarea = document.getElementById('mainConsole');\n        textarea.scrollTop = textarea.scrollHeight \n    }\n\n    async function execCtrlOperation(key, mappedCtrl, params=\"0\", datas=\"0\", op1=\"0\", op2=\"0\", op3=\"0\") {\n        let keyInput = key + ' => ' + mappedCtrl\n\n        if(idContainer.ctrl_id === \"0\" || idContainer.ctrl_an_id === \"0\" || idContainer.c_usr_an_id === \"0\" || idContainer.r_usr_an_id === \"0\"){\n\n            //Error message for id validation check\n            let ctrlAndRobotNotSetError = \"ERROR: Your robot or controls aren't set yet. Set those first and connect to your robot before issuing a command.\"\n            alert('Command was not sent to Robot!')\n\n            //Update cosnole\n            updateConsoles(ctrlAndRobotNotSetError)\n            \n        }else{\n\n            //Update cosnole\n            updateConsoles(keyInput)\n\n            //Assign Command\n            setSendCommandData(prevState => {\n                return{\n                    ...prevState,\n                    cmd_an_id : prevState = createANID(40),\n                    r_usr_an_id : prevState = idContainer.r_usr_an_id,\n                    c_usr_an_id : prevState = idContainer.c_usr_an_id,\n                    r_usr_code_name : prevState = appVars.botConnectedName,\n                    cmd_exec_name : prevState = mappedCtrl,\n                    cmd_exec_params : prevState = params,\n                    cmd_exec_data : prevState = datas,\n                    cmd_status : prevState = \"UNEXECUTED\",\n                    cmd_op1 : prevState = op1,\n                    cmd_op2 : prevState = op2,\n                    cmd_op3 : prevState = op3,\n                    cmd_date_created : prevState = getCurrDateTime(),\n                    cmd_date_executed : prevState = \"1970-01-01 00:00:00\"\n                }\n            })\n\n            postArcData(arc_cmd_table__POST, sendCommandData)\n\n            console.log(sendCommandData)\n        }\n    }\n\n    async function handleControllerClick(event) {\n\n        const controllerID = event.target.attributes[1].value\n        const mappedKey = controllerMap\n        \n        if(controllerID === 'ctrl_arrow_up'){\n            execCtrlOperation(controllerID, mappedKey.ctrl_arrow_up, \"0\", \"0\", \"0\", \"0\", \"0\")\n        }else if(controllerID === 'ctrl_arrow_down'){\n            execCtrlOperation(controllerID, mappedKey.ctrl_arrow_down, \"0\", \"0\", \"0\", \"0\", \"0\")\n        }else if(controllerID === 'ctrl_arrow_left'){\n            execCtrlOperation(controllerID, mappedKey.ctrl_arrow_left, \"0\", \"0\", \"0\", \"0\", \"0\")\n        }else if(controllerID === 'ctrl_arrow_right'){\n            execCtrlOperation(controllerID, mappedKey.ctrl_arrow_right, \"0\", \"0\", \"0\", \"0\", \"0\")\n        }else if(controllerID === 'ctrl_index_left'){\n            execCtrlOperation(controllerID, mappedKey.ctrl_index_left, \"0\", \"0\", \"0\", \"0\", \"0\")\n        }else if(controllerID === 'ctrl_index_right'){\n            execCtrlOperation(controllerID, mappedKey.ctrl_index_right, \"0\", \"0\", \"0\", \"0\", \"0\")\n        }else if(controllerID === 'ctrl_btn_y'){\n            execCtrlOperation(controllerID, mappedKey.ctrl_btn_y, \"0\", \"0\", \"0\", \"0\", \"0\")\n        }else if(controllerID === 'ctrl_btn_x'){\n            execCtrlOperation(controllerID, mappedKey.ctrl_btn_x, \"0\", \"0\", \"0\", \"0\", \"0\")\n        }else if(controllerID === 'ctrl_btn_b'){\n            execCtrlOperation(controllerID, mappedKey.ctrl_btn_b, \"0\", \"0\", \"0\", \"0\", \"0\")\n        }else if(controllerID === 'ctrl_btn_a'){\n            execCtrlOperation(controllerID, mappedKey.ctrl_btn_a, \"0\", \"0\", \"0\", \"0\", \"0\")\n        }else if(controllerID === 'ctrl_btn_start'){\n            execCtrlOperation(controllerID, mappedKey.ctrl_btn_star, \"0\", \"0\", \"0\", \"0\", \"0\")\n        }else if(controllerID === 'ctrl_btn_select'){\n            execCtrlOperation(controllerID, mappedKey.ctrl_btn_select, \"0\", \"0\", \"0\", \"0\", \"0\")\n        }\n\n        console.log(event)\n    }\n\n    async function handleBotSelect(event) {\n\n        //Console Message\n        let robotSelectMessage = \"CONSOLE: Your Robot [\"+event.target.options[event.target.selectedIndex].text+\"] has been selected. \"\n\n        //update app vars\n        setAppVars(prevState => {\n            return { \n                ...prevState,\n                setOrNotSet1: prevState = \"[Robot Set!]\",\n                botConnectedID: prevState = event.target.value,\n                botConnectedName: prevState = event.target.options[event.target.selectedIndex].text,\n                red_or_Green_Txt1: prevState = \"text-green-700 font-bold text-lg\"\n            }\n        })\n        \n        //update ID container\n        setIDContainer(prevState => {\n            return{\n                ...prevState,\n                r_usr_an_id : prevState = event.target.value\n            }\n        })\n\n        //Update cosnole\n        updateConsoles(robotSelectMessage)\n    }\n\n    async function handleControllerSelect(event) {\n\n        //Console Message\n        let controlSelectMessage = \"CONSOLE: Your User Controls for [\"+event.target.options[event.target.selectedIndex].text+\"] have been loaded.\"\n        \n        setAppVars(prevState => {\n            return { \n                ...prevState,\n                setOrNotSet2: prevState = \"[User Controls Set!]\",\n                selectedCtrlID: prevState = event.target.value,\n                selectedCtrlName: prevState = event.target.options[event.target.selectedIndex].text,\n                red_or_Green_Txt2: prevState = \"text-green-700 font-bold text-lg\"\n            }\n        })\n\n        // API request to get controller data\n        const resp_selected_controller = await fetch(arc_ctrl_table__AN_GET_By_C_User+event.target.value)\n        const selected_data_controller = await resp_selected_controller.json()\n        \n\n        setControllerMap(prevState => {\n            return { \n                ...prevState,\n                ctrl_index_left: prevState = selected_data_controller.ctrl_index_left,\n                ctrl_index_right: prevState = selected_data_controller.ctrl_index_right,\n                ctrl_arrow_up: prevState = selected_data_controller.ctrl_arrow_up,\n                ctrl_arrow_down: prevState = selected_data_controller.ctrl_arrow_down,\n                ctrl_arrow_left: prevState = selected_data_controller.ctrl_arrow_left,\n                ctrl_arrow_right: prevState = selected_data_controller.ctrl_arrow_right,\n                ctrl_btn_x: prevState = selected_data_controller.ctrl_btn_x,\n                ctrl_btn_y: prevState = selected_data_controller.ctrl_btn_y,\n                ctrl_btn_a: prevState = selected_data_controller.ctrl_btn_a,\n                ctrl_btn_b: prevState = selected_data_controller.ctrl_btn_b,\n                ctrl_btn_start: prevState = selected_data_controller.ctrl_btn_start,\n                ctrl_btn_select: prevState = selected_data_controller.ctrl_btn_select\n            }\n        })\n\n        //update ID container\n        setIDContainer(prevState => {\n            return{\n                ...prevState,\n                c_usr_an_id: prevState = event.target.value,\n                ctrl_id : prevState = selected_data_controller.ctrl_id,\n                ctrl_an_id : prevState = selected_data_controller.ctrl_an_id,\n            }\n        })\n\n        //Update cosnole\n        updateConsoles(controlSelectMessage)\n\n        console.log(selected_data_controller)\n        console.log(controllerMap)\n        console.log(idContainer)\n    }\n    \n    return(\n        <div className=\"flex flex-col space-y-8 w-1/2 m-auto\">\n            \n            <div >\n                <div className=\"container\">\n                    <div className=\"bumper bumper--left\" data1=\"ctrl_index_left\" onClick={handleControllerClick}></div>\n                    <div className=\"bumper bumper--right\" data1=\"ctrl_index_right\" onClick={handleControllerClick}></div>\n                    <div className=\"controller\">\n                        <div className=\"controller__cord\"></div>\n                        <div className=\"left-pad\">\n                        <div className=\"dpad\">\n                            <div className=\"dpad__button button--vertical\">\n                            <div className=\"dpad__arrow arrow--top\" data1=\"ctrl_arrow_up\"  onClick={handleControllerClick}></div>\n                            <div className=\"dpad__arrow arrow--bottom\" data1=\"ctrl_arrow_down\"  onClick={handleControllerClick}></div>\n                            </div>\n                            <div className=\"dpad__button button--horizontal\">\n                            <div className=\"dpad__center\">\n                                <div className=\"dpad__circle\"></div>\n                            </div>\n                            <div className=\"dpad__arrow arrow--left\" data1=\"ctrl_arrow_left\"  onClick={handleControllerClick}></div>\n                            <div className=\"dpad__arrow arrow--right\" data1=\"ctrl_arrow_right\"  onClick={handleControllerClick}></div>\n                            </div>\n                        </div>\n                        </div>\n                        <div className=\"middle-pad\">\n                        <div className=\"logo\">\n                            <h1 className=\"logo__header\">Super Lonaris</h1>\n                            <h2 className=\"logo__byline\">Automated Remote Control System</h2>\n                        </div>\n                        <div className=\"start-select\">\n                            <div className=\"start-select__button button--start\" >\n                            <div className=\"start-select__interior\" data1=\"ctrl_btn_start\" onClick={handleControllerClick}></div>\n                            </div>\n                            <div className=\"start-select__button button--select\" >\n                            <div className=\"start-select__interior\" data1=\"ctrl_btn_select\" onClick={handleControllerClick}></div>\n                            </div>\n                        </div>\n                        </div>\n                        <div className=\"right-pad\">\n                        <div className=\"right-controls\">\n                            <div className=\"right-controls__circle\"></div>\n                            <div className=\"button-group button-group--top\">\n                            <div className=\"button-group__button button--x\" data1=\"ctrl_btn_x\" onClick={handleControllerClick}></div>\n                            <div className=\"button-group__button button--y\" data1=\"ctrl_btn_y\" onClick={handleControllerClick}></div>\n                            </div>\n                            <div className=\"button-group button-group--bottom\">\n                            <div className=\"button-group__button button--a\"  data1=\"ctrl_btn_a\" onClick={handleControllerClick}></div>\n                            <div className=\"button-group__button button--b\" data1=\"ctrl_btn_b\" onClick={handleControllerClick}></div>\n                            </div>\n                        </div>\n                        </div>\n                    </div>\n                </div> \n            </div>\n            <div className=\"\">\n                <div>\n                    <br /><br /><br /><br /><br /><br /><br /><br /><br />\n                    <br /><br /><br /><br /><br />\n                    <h1 className=\"text-xl\">Cockpit Console:</h1>\n                    <div id=\"mainConsole\" className=\"overflow-auto h-32 bg-black rounded-lg text-white leading-6\" style={{ whiteSpace: 'pre-wrap' }} ref={consoleOutput} abindex='1' readOnly>\n                        {consoleTextAreaValue}\n                    </div>\n                    <div id=\"currentCommand\" className=\"overflow-auto h-6 bg-purple-900 rounded-lg text-yellow-200 leading-6\"  ref={consoleOutput} abindex='1' readOnly>\n                        {currentConsoleOutput}\n                    </div>\n                </div>\n                <div>\n                    <div className=\"border-4 border-blue-600\">\n                        <h1 className=\"text-xl\">Choose your robot and configuration:</h1>\n                        <div className=\"flex flex-wrap\">\n\n                                <div className=\"w-1/3 h-20 flex items-center\">\n                                    <label htmlFor=\"\"><b>1. </b></label>\n                                    <select className=\"p-2 rounded\" name=\"c_usr_an_id\" onChange={handleBotSelect}>\n                                        <option value=\"0\"  >-- Pick Your Bot --</option>\n                                        {r_usr_data}\n                                    </select>\n                                </div>\n                                <div className=\"w-1/6 h-20 flex items-center\">\n                                    <span className={appVars.red_or_Green_Txt1}>{appVars.setOrNotSet1}</span>\n                                </div>\n                                <div className=\"w-1/6 h-20 flex items-center\">\n                                    <button onClick={sendConnectToken} className={btnStyle}>\n                                        Connect\n                                    </button>\n                                </div>\n                                <div className=\"w-1/6 h-20 flex items-center\">\n                                    <button onClick={getRobotStatus} className={btnStyle}>\n                                        Get Status\n                                    </button>\n                                </div>\n                                <div className=\"w-1/6 h-20 flex items-center\">\n                                    <button onClick={sendTest} className={btnStyle}>\n                                        test\n                                    </button>\n                                </div>\n                        </div>\n                        <div className=\"flex flex-wrap\">\n\n                                <div className=\"w-1/3 h-20 flex items-center\">\n                                    <label htmlFor=\"\"><b>2. </b></label> \n                                    <select className=\"p-2 rounded\" name=\"r_usr_an_id\" onChange={handleControllerSelect}>\n                                        <option value=\"0\"  >-- Pick Control --</option>\n                                         {c_usr_data}\n                                    </select>\n                                </div>\n                                <div className=\"w-1/3 h-20 flex items-center\">\n                                    <span className={appVars.red_or_Green_Txt2}>{appVars.setOrNotSet2}</span>\n                                </div>\n                                \n                        </div>\n                        <div className=\"flex flex-wrap\">\n                                \n                                \n                        </div>\n                        \n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Cockpit","import React, {Component} from 'react'\nimport {postArcData, \n        getCurrDateTime, \n        anID_R_Gen,\n        btnStyle,\n        arc_r_usrs__GET} from '../utils/sh'\n\nclass Register  extends Component{\n\n     constructor(props){\n        super(props)\n        this.state={\n            \"r_usr_an_id\" : '',\n            \"r_usr_code_name\" : \"\",\n            \"r_usr_ip\" : \"1.1.1.1\",\n            \"r_usr_status\" : \"Active\",\n            \"r_usr_type\" : \"\",\n            \"r_usr_op1\" : \"\",\n            \"r_usr_op2\" : \"\",\n            \"r_usr_date_created\" : getCurrDateTime()\n        }\n    }\n\n    componentDidMount = async () =>{\n        const getR_USR_AN_ID = await anID_R_Gen()\n        this.setState({\"r_usr_an_id\": getR_USR_AN_ID})\n    }\n   \n    handleSubmit = async (event) =>{\n        event.preventDefault()\n        const data = this.state\n        \n        postArcData(arc_r_usrs__GET, data)\n        console.log(data)\n        window.location.reload();\n    }\n    \n    handleInputChange = async (event) =>{\n        event.preventDefault()\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n\n    render(){\n        const{r_usr_ip} = this.state\n\n        return(\n        <div className=\"flex flex-col space-y-8 w-1/2 m-auto\">\n            <h1 className=\"text-2xl\">Register Robot</h1>\n            <form onSubmit={this.handleSubmit}>\n\n                <div className=\"flex flex-col text-left\">\n                    <label htmlFor=\"\">Robot Name: </label>\n                    <input type=\"text\" className=\"p-2 rounded\" onChange={this.handleInputChange} name=\"r_usr_code_name\"/>\n                </div>\n                <div className=\"flex flex-col text-left\">\n                    <label htmlFor=\"\">Robot Type: </label>\n                    <select onChange={this.handleInputChange} className=\"p-2 rounded\" name=\"r_usr_type\">\n                        <option value=\"DevBot\">DevBot</option>\n                        <option value=\"Sentenal\">Sentenal</option>\n                        <option value=\"Optimus\">Optimus</option>\n                        <option value=\"UltronMk1\">UltronMk1</option>\n                    </select>\n                </div>\n                <div className=\"flex flex-col text-left\">\n                    <label htmlFor=\"\">Bot IP:</label>\n                    <input type=\"text\" value={r_usr_ip} className=\"p-2 rounded\" onChange={this.handleInputChange} name=\"r_usr_ip\"/>\n                </div>\n                <div className=\"flex flex-col text-left\">\n                    <label htmlFor=\"\">Option 1:</label>\n                    <input type=\"text\" className=\"p-2 rounded\" onChange={this.handleInputChange} name=\"r_usr_op1\"/>\n                </div>\n                <div className=\"flex flex-col text-left\">\n                    <label htmlFor=\"\">Option 2: </label>\n                    <input type=\"text\" className=\"p-2 rounded\" onChange={this.handleInputChange} name=\"r_usr_op2\"/>\n                </div>\n\n                <button className={btnStyle}>\n                Submit\n                </button>\n            </form>\n        </div>\n        )\n    }\n}\n\nexport default Register","import React, {Component} from 'react'\nimport {postArcData, \n    getCurrDateTime, \n    getArcData,\n    anID_Cmd_Lst_Gen,\n    arc_cmd_list_table__POST} from '../utils/sh'\n\n\nclass Settings extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            \"cmd_lst_an_id\" : \"\",\n            \"cmd_exec_name\" : \"\",\n            \"cmd_lst_exec_description\" : \"\",\n            \"cmd_lst_status\" : \"Active\",\n            \"cmd_lst_type\" : \"Action\",\n            \"cmd_lst_date_created\" : getCurrDateTime()\n        }\n\n        localStorage.setItem(\"r_data\",\"{}\")\n    }\n\n    componentDidMount = async () =>{\n        const getCmd_Lst_USR_AN_ID = await anID_Cmd_Lst_Gen()\n        this.setState({\"cmd_lst_an_id\": getCmd_Lst_USR_AN_ID})\n\n    }\n\n    componentWillUnmount = async (event) =>{\n        \n    }\n   \n    handleSubmit = async (event) =>{\n        event.preventDefault()\n        const data = this.state\n        \n        postArcData(arc_cmd_list_table__POST, data)\n        console.log(data)\n        window.location.reload();\n    }\n    \n    handleInputChange = async (event) =>{\n        event.preventDefault()\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    \n    render(){\n        return(\n        <div className=\"flex flex-col space-y-8 w-1/2 m-auto\">\n            <h1 className=\"text-2xl\">Manage Settings:</h1>\n            <h2 className=\"text-1xl\">Add A Command:</h2>\n\n            <form onSubmit={this.handleSubmit}>\n                <div className=\"flex flex-col text-left\">\n                    <label htmlFor=\"\">Command Execution Name: </label>\n                    <input onChange={this.handleInputChange} type=\"text\" className=\"p-2 rounded\" name=\"cmd_exec_name\"/>\n                </div>\n                <div className=\"flex flex-col text-left\">\n                    <label htmlFor=\"\">Command Description: </label>\n                    <textarea onChange={this.handleInputChange} type=\"text\" className=\"p-2 rounded\" name=\"cmd_lst_exec_description\"></textarea>\n                </div>\n                <div className=\"flex flex-col text-left\">\n                    <label htmlFor=\"\">Command Status:</label>\n                    <select onChange={this.handleInputChange} className=\"p-2 rounded\" name=\"c_usr_type\">\n                        <option value=\"Active\">Active</option>\n                        <option value=\"In_Active\">In-Active</option>\n                    </select>\n                </div>\n                <div className=\"flex flex-col text-left\">\n                    <label htmlFor=\"\">Command Type: </label>\n                    <select onChange={this.handleInputChange} className=\"p-2 rounded\" name=\"c_usr_type\">\n                        <option value=\"Direction\">Direction</option>\n                        <option value=\"Action\">Action</option>\n                        <option value=\"Idle\">Idle</option>\n                        <option value=\"Data\">Data</option>\n                    </select>\n                </div>\n                <br />\n                <button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\">\n                Submit\n                </button>\n            </form>\n        </div>\n        )\n    }\n}\n\nexport default Settings","import React, {Component} from 'react'\nimport {postArcData, \n    getCurrDateTime, \n    getArcData,\n    anID_C_Gen,\n    arc_r_usrs__GET,\n    arc_c_usrs__POST} from '../utils/sh'\n\nclass RegisterUser extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            \"c_usr_an_id\":\"\",\n            \"r_usr_an_id\":\"ASDF123\",\n            \"c_usr_name\":\"\",\n            \"c_usr_pwd\":\"\",\n            \"c_usr_pwd_hash\":\"null\",\n            \"c_usr_email\":\"\",\n            \"c_usr_ip\":\"localhost\",\n            \"c_usr_status\":\"Active\",\n            \"c_usr_op1\":\"0\",\n            \"c_usr_op2\":\"0\",\n            \"c_usr_type\":\"User\",\n            \"c_usr_date_created\": getCurrDateTime()\n        }\n\n        //localStorage.setItem(\"r_data\",\"{}\")\n    }\n\n    componentDidMount = async () =>{\n        const getC_USR_AN_ID = await anID_C_Gen()\n        this.setState({\"c_usr_an_id\": getC_USR_AN_ID})\n\n        const getR_Name_And_ID = await getArcData(arc_r_usrs__GET)\n\n        localStorage.setItem(\"r_data\", JSON.stringify(getR_Name_And_ID.data));\n    }\n\n    componentWillUnmount = async (event) =>{\n        \n    }\n   \n    handleSubmit = async (event) =>{\n        event.preventDefault()\n        const data = this.state\n        \n        postArcData(arc_c_usrs__POST, data)\n        console.log(data)\n        window.location.reload();\n    }\n    \n    handleInputChange = async (event) =>{\n        event.preventDefault()\n        this.setState({\n            [event.target.name]: event.target.value\n        })\n    }\n    \n    \n    render(){\n        const r_data = JSON.parse(localStorage.getItem('r_data'))\n        const optionList = Object.entries(r_data).map(key => {\n            return(\n                <option value={key[1].r_usr_an_id}  >{key[1].r_usr_code_name}</option>\n            )\n        })\n\n        return(\n        <div className=\"flex flex-col space-y-8 w-1/2 m-auto\">\n        <h1 className=\"text-2xl\">Create User</h1>\n        <form onSubmit={this.handleSubmit}>\n\n            <div className=\"flex flex-col text-left\">\n                <label htmlFor=\"\">Username: </label>\n                <input onChange={this.handleInputChange} type=\"text\" className=\"p-2 rounded\" name=\"c_usr_name\"/>\n            </div>\n            <div className=\"flex flex-col text-left\">\n                <label htmlFor=\"\">Password: </label>\n                <input onChange={this.handleInputChange} type=\"password\" className=\"p-2 rounded\" name=\"c_usr_pwd\"/>\n            </div>\n            <div className=\"flex flex-col text-left\">\n                <label htmlFor=\"\">Email:</label>\n                <input onChange={this.handleInputChange} type=\"email\" className=\"p-2 rounded\" name=\"c_usr_email\"/>\n            </div>\n            <div className=\"flex flex-col text-left\">\n                <label htmlFor=\"\">User Type: </label>\n                <select onChange={this.handleInputChange} className=\"p-2 rounded\" name=\"c_usr_type\">\n                        <option value=\"User\">User</option>\n                        <option value=\"Power_User\">Power User</option>\n                        <option value=\"Admin\">Admin</option>\n                </select>\n            </div>\n            <div className=\"flex flex-col text-left\">\n                <label htmlFor=\"\">Select Robot: </label>\n                <select onChange={this.handleInputChange} className=\"p-2 rounded\" name=\"r_usr_an_id\">\n                        {optionList}\n                    </select>\n            </div>\n            <div className=\"flex flex-col text-left\">\n                <label htmlFor=\"\">Option 1: </label>\n                <input onChange={this.handleInputChange} type=\"text\" className=\"p-2 rounded\" id=\"\"/>\n            </div>\n            <div className=\"flex flex-col text-left\">\n                <label htmlFor=\"\">Option 2: </label>\n                <input onChange={this.handleInputChange} type=\"text\" className=\"p-2 rounded\" id=\"\"/>\n            </div>\n            \n            <br />\n            <button className=\"bg-blue-500 hover:bg-blue-400 text-white font-bold py-2 px-4 border-b-4 border-blue-700 hover:border-blue-500 rounded\">\n             Submit\n            </button>\n        </form>\n        </div>\n        )\n    }\n}\n\nexport default RegisterUser","import React, {useState, useEffect} from 'react'\nimport $ from 'jquery';\nimport {postArcData, \n        patchArcData,\n        btnStyle, \n        anID_C_Gen, \n        arc_ctrl_table__POST,\n        arc_c_usrs__GET,\n        arc_cmd_list_table__GET,\n        arc_ctrl_table__GET,\n        arc_ctrl_table__PATCH\n} from '../utils/sh'\n\nfunction ControlsComponent(){\n    \n    var createdOrUpdate = 'create'\n    const [c_usr_data, setC_Usr_Data] = useState(null)\n    const [c_cmd_lst_data, setC_Cmd_List] = useState(null)\n    const [appVars, setAppVars] = useState({\n        setOrNotSet : \"Not Set\",\n        red_or_Green_Txt : \"text-red-700 font-bold text-lg\",\n        default_option: <option value=\"0\"  >-- Pick Control --</option>\n    });\n    const [ctrl_fields, setHandleFieldChange] = useState({\n        ctrl_id : \"0\",\n        ctrl_an_id : \"0\",\n        c_usr_an_id : \"0\",\n        ctrl_arrow_up : \"0\",\n        ctrl_arrow_down : \"0\",\n        ctrl_arrow_left : \"0\",\n        ctrl_arrow_right : \"0\",\n        ctrl_index_left : \"0\",\n        ctrl_index_right : \"0\",\n        ctrl_btn_y : \"0\",\n        ctrl_btn_x : \"0\",\n        ctrl_btn_b : \"0\",\n        ctrl_btn_a : \"0\",\n        ctrl_btn_start : \"0\",\n        ctrl_btn_select : \"0\",\n        ctrl_combo_1 : \"0\",\n        ctrl_combo_2 : \"0\",\n        ctrl_combo_3 : \"0\",\n        ctrl_combo_4 : \"0\",\n        ctrl_combo_5 : \"0\",\n        ctrl_combo_6 : \"0\"\n    });\n\n    useEffect(async() =>{\n        const response_arc_c_users = await fetch(arc_c_usrs__GET)\n        const response_arc_cmd_list_table = await fetch(arc_cmd_list_table__GET)\n\n        const data_arc_c_users = await response_arc_c_users.json()\n        const data_arc_cmd_lst = await response_arc_cmd_list_table.json()\n\n        const optionList_C_Usr = Object.entries(data_arc_c_users).map(key => {\n            return(\n                <option value={key[1].c_usr_an_id}  >{key[1].c_usr_name}</option>\n            )\n        })\n\n        const optionList_C_Cmd_List = Object.entries(data_arc_cmd_lst).map(key => {\n            return(\n                <option value={key[1].cmd_lst_an_id}  >{key[1].cmd_exec_name}</option>\n            )\n        })\n\n        setC_Usr_Data(optionList_C_Usr)\n        setC_Cmd_List(optionList_C_Cmd_List)\n \n    }, [])\n\n    async function handleSubmit(event) {\n        event.preventDefault();\n        \n        const cus = localStorage.getItem('createOrUpdate_State')\n        \n        if(cus === 'create'){\n    \n            postArcData(arc_ctrl_table__POST, ctrl_fields)\n            alert(\"Your controls have been created!\")\n            \n        }else if(cus === 'update'){\n            //since we can only update by id, we need to get the id\n            patchArcData(arc_ctrl_table__PATCH, ctrl_fields, ctrl_fields.ctrl_id)\n            alert(\"Your controls have been updated!\")\n        }\n    }\n\n    async function handleFieldChange(event) {\n\n        const cus = localStorage.getItem('createOrUpdate_State')\n        \n        if(cus === 'create'){\n            const getCtrl_AN_ID = await anID_C_Gen()\n            setHandleFieldChange(prevState => {\n                return{\n                    ...prevState, \n                    ctrl_an_id: getCtrl_AN_ID,\n                    [event.target.name]: event.target.value\n                }\n            })\n        }else if(cus === 'update'){\n            setHandleFieldChange(prevState => {\n                return{\n                    ...prevState, \n                    [event.target.name]: event.target.value\n                }\n            })\n        }\n        \n    }\n\n    async function handleFieldChange_usr(event) {\n\n        // clear fields and assume we're creating, logic latter down will determine if we need to update\n        createdOrUpdate = 'create'\n        resetSelectToDefault()\n        resetSelectToDefaultObject()\n\n        //chekc if this person needs an update\n        let getCtrlID = ''\n        const check_c_usr_ANID = event.target.value\n        const check_ctrl_ANID_raw = await fetch(arc_ctrl_table__GET) \n        const check_ctrl_ANID_json = await check_ctrl_ANID_raw.json()\n        const check_ctrl_ANID_loop = Object.entries(check_ctrl_ANID_json).map(key => {\n            if(key[1].c_usr_an_id === check_c_usr_ANID){\n                createdOrUpdate = 'update'\n\n                $('select[name=\"ctrl_arrow_up\"]').val(key[1].ctrl_arrow_up);\n                $('select[name=\"ctrl_arrow_down\"]').val(key[1].ctrl_arrow_down);\n                $('select[name=\"ctrl_arrow_left\"]').val(key[1].ctrl_arrow_left);\n                $('select[name=\"ctrl_arrow_right\"]').val(key[1].ctrl_arrow_right);\n                $('select[name=\"ctrl_btn_a\"]').val(key[1].ctrl_btn_a);\n                $('select[name=\"ctrl_btn_b\"]').val(key[1].ctrl_btn_b);\n                $('select[name=\"ctrl_btn_x\"]').val(key[1].ctrl_btn_x);\n                $('select[name=\"ctrl_btn_y\"]').val(key[1].ctrl_btn_y);\n                $('select[name=\"ctrl_btn_select\"]').val(key[1].ctrl_btn_select);\n                $('select[name=\"ctrl_btn_start\"]').val(key[1].ctrl_btn_start);\n                $('select[name=\"ctrl_index_left\"]').val(key[1].ctrl_index_left);\n                $('select[name=\"ctrl_index_right\"]').val(key[1].ctrl_index_right);\n\n                setHandleFieldChange(prevState => {\n                    return{\n                        ...prevState,\n                        ctrl_id:  key[1].ctrl_id,\n                        c_usr_an_id: check_c_usr_ANID,\n                        ctrl_an_id:  key[1].ctrl_an_id,\n                        ctrl_arrow_up : key[1].ctrl_arrow_up,\n                        ctrl_arrow_down : key[1].ctrl_arrow_down,\n                        ctrl_arrow_left : key[1].ctrl_arrow_left,\n                        ctrl_arrow_right : key[1].ctrl_arrow_right,\n                        ctrl_btn_a : key[1].ctrl_btn_a,\n                        ctrl_btn_b : key[1].ctrl_btn_b,\n                        ctrl_btn_x : key[1].ctrl_btn_x,\n                        ctrl_btn_y : key[1].ctrl_btn_y,\n                        ctrl_btn_select : key[1].ctrl_btn_select,\n                        ctrl_btn_start : key[1].ctrl_btn_start,\n                        ctrl_index_left : key[1].ctrl_index_left,\n                        ctrl_index_right : key[1].ctrl_index_right\n                    }\n                })\n                //console.log(key[1].c_usr_an_id + ' ~ u')\n            }\n        })\n        \n        //Update vars based on what request they make\n        if(createdOrUpdate === 'create'){\n\n            setHandleFieldChange(prevState => {\n                return{\n                    ...prevState, \n                    c_usr_an_id: check_c_usr_ANID\n                }\n            })\n            \n            setAppVars(prevState => {\n                return { \n                    ...prevState,\n                    setOrNotSet: prevState = \"Set! [CREATE MODE]\",\n                    red_or_Green_Txt : prevState = \"text-green-700 font-bold text-lg\"\n                }\n            })\n\n        }else if(createdOrUpdate === 'update'){\n    \n            setAppVars(prevState => {\n                return { \n                    ...prevState,\n                    setOrNotSet: prevState = \"Set! [UPDATE MODE]\",\n                    red_or_Green_Txt : prevState = \"text-green-700 font-bold text-lg\"\n                }\n            })\n        }\n\n        localStorage.setItem(\"createOrUpdate_State\", createdOrUpdate);\n    }\n\n    async function handleC_Usr_Set() {\n        console.log(ctrl_fields)\n        \n    }\n\n    async function resetSelectToDefault(){\n        $('select[name=\"ctrl_arrow_up\"]').val('0');\n        $('select[name=\"ctrl_arrow_down\"]').val('0');\n        $('select[name=\"ctrl_arrow_left\"]').val('0');\n        $('select[name=\"ctrl_arrow_right\"]').val('0');\n        $('select[name=\"ctrl_btn_a\"]').val('0');\n        $('select[name=\"ctrl_btn_b\"]').val('0');\n        $('select[name=\"ctrl_btn_x\"]').val('0');\n        $('select[name=\"ctrl_btn_y\"]').val('0');\n        $('select[name=\"ctrl_btn_select\"]').val('0');\n        $('select[name=\"ctrl_btn_start\"]').val('0');\n        $('select[name=\"ctrl_index_left\"]').val('0');\n        $('select[name=\"ctrl_index_right\"]').val('0');\n\n\n    }\n\n    async function resetSelectToDefaultObject(){\n        setHandleFieldChange({\n                ctrl_an_id : \"0\",\n                c_usr_an_id : \"0\",\n                ctrl_arrow_up : \"0\",\n                ctrl_arrow_down : \"0\",\n                ctrl_arrow_left : \"0\",\n                ctrl_arrow_right : \"0\",\n                ctrl_index_left : \"0\",\n                ctrl_index_right : \"0\",\n                ctrl_btn_y : \"0\",\n                ctrl_btn_x : \"0\",\n                ctrl_btn_b : \"0\",\n                ctrl_btn_a : \"0\",\n                ctrl_btn_start : \"0\",\n                ctrl_btn_select : \"0\",\n                ctrl_combo_1 : \"0\",\n                ctrl_combo_2 : \"0\",\n                ctrl_combo_3 : \"0\",\n                ctrl_combo_4 : \"0\",\n                ctrl_combo_5 : \"0\",\n                ctrl_combo_6 : \"0\"\n        })\n    }\n    \n   \n    return(\n        <div className=\"flex flex-col space-y-8 w-1/2 m-auto\">\n\n            <div className=\"border-4 border-blue-600\">\n                <div className=\"flex flex-wrap\">\n\n                        <div className=\"w-1/4 h-20 flex items-center\">\n                            <label htmlFor=\"\"><b> Choose a user:</b></label>\n                         </div>\n                        <div className=\"w-1/4 h-20 flex items-center\">\n                            <select className=\"p-2 rounded\" name=\"c_usr_an_id\" onChange={handleFieldChange_usr}>\n                            <option value=\"0\"  >-- Pick User --</option>\n                                {c_usr_data}\n                             </select>\n                        </div>\n                        <div className=\"w-1/4 h-20 flex items-center\">\n                            {/* <button onClick={handleC_Usr_Set} className={btnStyle}>\n                                test\n                            </button>  */}\n                        </div>\n                        <div className=\"w-1/4 h-20 flex items-center\">\n                            <span className={appVars.red_or_Green_Txt}>{appVars.setOrNotSet}</span>\n                        </div>\n                </div>\n            </div>\n\n            <div className=\"border-4 border-blue-600\">\n                <form onSubmit={handleSubmit} className=\"flex flex-wrap\">\n                        <div className=\"w-1/4 h-20 flex items-center flex flex-col text-left\">\n                            <label htmlFor=\"\"><b>Arrow Up: </b></label>\n                            <select className=\"p-2 rounded \" onChange={handleFieldChange} name=\"ctrl_arrow_up\">\n                                {appVars.default_option} {c_cmd_lst_data}\n                             </select>\n                         </div>\n                        <div className=\"w-1/4 h-20 flex items-center flex flex-col text-left\">\n                        <label htmlFor=\"\"><b>Arrow Down: </b></label>\n                            <select className=\"p-2 rounded \" onChange={handleFieldChange} name=\"ctrl_arrow_down\">\n                                {appVars.default_option} {c_cmd_lst_data}\n                             </select>\n                        </div>\n                        <div className=\"w-1/4 h-20 flex items-center flex flex-col text-left\">\n                        <label htmlFor=\"\"><b>Arrow Left: </b></label>\n                            <select className=\"p-2 rounded \" onChange={handleFieldChange} name=\"ctrl_arrow_left\">\n                                {appVars.default_option} {c_cmd_lst_data}\n                            </select>\n                        </div>\n                        <div className=\"w-1/4 h-20 flex items-center flex flex-col text-left\">\n                        <label htmlFor=\"\"><b>Arrow Right: </b></label>\n                            <select className=\"p-2 rounded \" onChange={handleFieldChange} name=\"ctrl_arrow_right\">\n                                {appVars.default_option} {c_cmd_lst_data}\n                            </select>\n                        </div>\n                        <div className=\"w-1/4 h-20 flex items-center flex flex-col text-left\">\n                        <label htmlFor=\"\"><b>Button A: </b></label>\n                            <select className=\"p-2 rounded \" onChange={handleFieldChange} name=\"ctrl_btn_a\">\n                                {appVars.default_option} {c_cmd_lst_data}\n                            </select>\n                        </div>\n                        <div className=\"w-1/4 h-20 flex items-center flex flex-col text-left\">\n                        <label htmlFor=\"\"><b>Button B: </b></label>\n                            <select className=\"p-2 rounded \" onChange={handleFieldChange} name=\"ctrl_btn_b\">\n                                {appVars.default_option} {c_cmd_lst_data}\n                            </select>\n                        </div>\n                        <div className=\"w-1/4 h-20 flex items-center flex flex-col text-left\">\n                        <label htmlFor=\"\"><b>Button X: </b></label>\n                            <select className=\"p-2 rounded \" onChange={handleFieldChange} name=\"ctrl_btn_x\">\n                                {appVars.default_option} {c_cmd_lst_data}\n                            </select>\n                        </div>\n                        <div className=\"w-1/4 h-20 flex items-center flex flex-col text-left\">\n                        <label htmlFor=\"\"><b>Button Y: </b></label>\n                            <select className=\"p-2 rounded \" onChange={handleFieldChange} name=\"ctrl_btn_y\">\n                                {appVars.default_option} {c_cmd_lst_data}\n                            </select>\n                        </div>\n                        <div className=\"w-1/4 h-20 flex items-center flex flex-col text-left\">\n                        <label htmlFor=\"\"><b>Button Index-Left: </b></label>\n                            <select className=\"p-2 rounded \" onChange={handleFieldChange} name=\"ctrl_index_left\">\n                                {appVars.default_option} {c_cmd_lst_data}\n                            </select>\n                        </div>\n                        <div className=\"w-1/4 h-20 flex items-center flex flex-col text-left\">\n                        <label htmlFor=\"\"><b>Button Index-Right: </b></label>\n                            <select className=\"p-2 rounded \" onChange={handleFieldChange} name=\"ctrl_index_right\">\n                                {appVars.default_option} {c_cmd_lst_data}\n                            </select>\n                        </div>\n                        <div className=\"w-1/4 h-20 flex items-center flex flex-col text-left\">\n                        <label htmlFor=\"\"><b>Button Start: </b></label>\n                            <select className=\"p-2 rounded \" onChange={handleFieldChange} name=\"ctrl_btn_start\">\n                                {appVars.default_option} {c_cmd_lst_data}\n                            </select>\n                        </div>\n                        <div className=\"w-1/4 h-20 flex items-center flex flex-col text-left\">\n                        <label htmlFor=\"\"><b>Button Select: </b></label>\n                            <select className=\"p-2 rounded \" onChange={handleFieldChange} name=\"ctrl_btn_select\">\n                                {appVars.default_option} {c_cmd_lst_data}\n                            </select>\n                        </div>\n                        \n\n                        <button className={btnStyle}>\n                            Submit/Update\n                        </button> \n                </form>\n            </div>\n        </div>\n    )\n    \n}\n\nexport default ControlsComponent","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst navs = [\n    {\n        path:\"/\",\n        name:\"CockPit\"\n    },\n    {\n        path:\"/settings\",\n        name:\"Settings\"\n    },\n    {\n        path:\"/controls\",\n        name:\"Configure Controls\"\n    },\n    {\n        path:\"/register\",\n        name:\"Register Robot\"\n    },\n    {\n        path:\"/registerUser\",\n        name:\"Create User\"\n    }\n    \n]\n\nconst Nav = () => (\n    <div>\n        <nav className=\"bg-blue-600 p-4 text-white shadow\">\n            <ul className=\"flex space-x-4 justify-start\">\n                <li>ARC CONTROL PANEL</li>\n            </ul>\n            <ul className=\"flex space-x-4 justify-end\">\n                {navs.map((navItem) => (\n                    <li><NavLink exact to={navItem.path} activeClassName=\"border-b border-white\">{navItem.name}</NavLink></li>\n                ))}\n            </ul>\n        </nav>\n    </div>\n)\n\nexport default Nav;","import React from 'react'\n\nconst Footer = () => (\n    <footer className=\"bg-blue-500 text-center p-4 text-white\">\n        Created by Keith C. and Copyright © Lonaris 2021\n    </footer>\n)\n\nexport default Footer;","import React from 'react';\nimport{\n  BrowserRouter as Router,\n  Switch,\n  Route\n} from \"react-router-dom\"\n\nimport {CockPit, Register, Settings, RegisterUser, Controls} from './pages';\nimport {Nav, Footer} from './layout';\n\n\nfunction App() {\n  return (\n    <div className=\"flex flex-col h-screen fl\">\n      <Router>\n        <Nav />\n        <Switch>\n          <Route exact path='/register'>\n            <Register />\n          </Route>\n          <Route exact path='/registerUser'>\n            <RegisterUser />\n          </Route>\n          <Route exact path='/controls'>\n            <Controls />\n          </Route>\n          <Route exact path='/settings'>\n            <Settings />\n          </Route>\n          <Route exact path='/'>\n            <CockPit />\n          </Route>\n        </Switch>\n        <Footer/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}